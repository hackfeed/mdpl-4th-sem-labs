
app.exe:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <__stack_chk_fail@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <__stack_chk_fail@GLIBC_2.4>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <printf@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <srand@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <srand@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <time@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <time@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <__isoc99_scanf@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <__isoc99_scanf@GLIBC_2.7>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <rand@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <rand@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .text:

0000000000001090 <_start>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	31 ed                	xor    %ebp,%ebp
    1096:	49 89 d1             	mov    %rdx,%r9
    1099:	5e                   	pop    %rsi
    109a:	48 89 e2             	mov    %rsp,%rdx
    109d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10a1:	50                   	push   %rax
    10a2:	54                   	push   %rsp
    10a3:	4c 8d 05 76 02 00 00 	lea    0x276(%rip),%r8        # 1320 <__libc_csu_fini>
    10aa:	48 8d 0d ff 01 00 00 	lea    0x1ff(%rip),%rcx        # 12b0 <__libc_csu_init>
    10b1:	48 8d 3d 20 01 00 00 	lea    0x120(%rip),%rdi        # 11d8 <main>
    10b8:	ff 15 22 2f 00 00    	callq  *0x2f22(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10be:	f4                   	hlt    
    10bf:	90                   	nop

00000000000010c0 <deregister_tm_clones>:
    10c0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4058 <__TMC_END__>
    10c7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4058 <__TMC_END__>
    10ce:	48 39 f8             	cmp    %rdi,%rax
    10d1:	74 15                	je     10e8 <deregister_tm_clones+0x28>
    10d3:	48 8b 05 fe 2e 00 00 	mov    0x2efe(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10da:	48 85 c0             	test   %rax,%rax
    10dd:	74 09                	je     10e8 <deregister_tm_clones+0x28>
    10df:	ff e0                	jmpq   *%rax
    10e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10e8:	c3                   	retq   
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <register_tm_clones>:
    10f0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4058 <__TMC_END__>
    10f7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4058 <__TMC_END__>
    10fe:	48 29 fe             	sub    %rdi,%rsi
    1101:	48 89 f0             	mov    %rsi,%rax
    1104:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1108:	48 c1 f8 03          	sar    $0x3,%rax
    110c:	48 01 c6             	add    %rax,%rsi
    110f:	48 d1 fe             	sar    %rsi
    1112:	74 14                	je     1128 <register_tm_clones+0x38>
    1114:	48 8b 05 d5 2e 00 00 	mov    0x2ed5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    111b:	48 85 c0             	test   %rax,%rax
    111e:	74 08                	je     1128 <register_tm_clones+0x38>
    1120:	ff e0                	jmpq   *%rax
    1122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1128:	c3                   	retq   
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <__do_global_dtors_aux>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	80 3d 1d 2f 00 00 00 	cmpb   $0x0,0x2f1d(%rip)        # 4058 <__TMC_END__>
    113b:	75 33                	jne    1170 <__do_global_dtors_aux+0x40>
    113d:	55                   	push   %rbp
    113e:	48 83 3d b2 2e 00 00 	cmpq   $0x0,0x2eb2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1145:	00 
    1146:	48 89 e5             	mov    %rsp,%rbp
    1149:	74 0d                	je     1158 <__do_global_dtors_aux+0x28>
    114b:	48 8b 3d fe 2e 00 00 	mov    0x2efe(%rip),%rdi        # 4050 <__dso_handle>
    1152:	ff 15 a0 2e 00 00    	callq  *0x2ea0(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1158:	e8 63 ff ff ff       	callq  10c0 <deregister_tm_clones>
    115d:	c6 05 f4 2e 00 00 01 	movb   $0x1,0x2ef4(%rip)        # 4058 <__TMC_END__>
    1164:	5d                   	pop    %rbp
    1165:	c3                   	retq   
    1166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    116d:	00 00 00 
    1170:	c3                   	retq   
    1171:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1178:	00 00 00 00 
    117c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 67 ff ff ff       	jmpq   10f0 <register_tm_clones>

0000000000001189 <getrand>:
    1189:	55                   	push   %rbp
    118a:	48 89 e5             	mov    %rsp,%rbp
    118d:	48 83 ec 10          	sub    $0x10,%rsp
    1191:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1194:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1197:	bf 00 00 00 00       	mov    $0x0,%edi
    119c:	e8 bf fe ff ff       	callq  1060 <time@plt>
    11a1:	89 c7                	mov    %eax,%edi
    11a3:	e8 a8 fe ff ff       	callq  1050 <srand@plt>
    11a8:	e8 d3 fe ff ff       	callq  1080 <rand@plt>
    11ad:	8b 55 fc             	mov    -0x4(%rbp),%edx
    11b0:	2b 55 f8             	sub    -0x8(%rbp),%edx
    11b3:	8d 4a 01             	lea    0x1(%rdx),%ecx
    11b6:	99                   	cltd   
    11b7:	f7 f9                	idiv   %ecx
    11b9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11bc:	01 d0                	add    %edx,%eax
    11be:	c9                   	leaveq 
    11bf:	c3                   	retq   

00000000000011c0 <cmpnum>:
    11c0:	55                   	push   %rbp
    11c1:	48 89 e5             	mov    %rsp,%rbp
    11c4:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11c7:	89 75 f8             	mov    %esi,-0x8(%rbp)
    11ca:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11cd:	3b 45 f8             	cmp    -0x8(%rbp),%eax
    11d0:	0f 94 c0             	sete   %al
    11d3:	0f b6 c0             	movzbl %al,%eax
    11d6:	5d                   	pop    %rbp
    11d7:	c3                   	retq   

00000000000011d8 <main>:
    11d8:	55                   	push   %rbp
    11d9:	48 89 e5             	mov    %rsp,%rbp
    11dc:	48 83 ec 20          	sub    $0x20,%rsp
    11e0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11e7:	00 00 
    11e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11ed:	31 c0                	xor    %eax,%eax
    11ef:	48 8d 3d 12 0e 00 00 	lea    0xe12(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    11f6:	b8 00 00 00 00       	mov    $0x0,%eax
    11fb:	e8 40 fe ff ff       	callq  1040 <printf@plt>
    1200:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1204:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    1208:	48 89 c6             	mov    %rax,%rsi
    120b:	48 8d 3d 17 0e 00 00 	lea    0xe17(%rip),%rdi        # 2029 <_IO_stdin_used+0x29>
    1212:	b8 00 00 00 00       	mov    $0x0,%eax
    1217:	e8 54 fe ff ff       	callq  1070 <__isoc99_scanf@plt>
    121c:	48 8d 3d 0d 0e 00 00 	lea    0xe0d(%rip),%rdi        # 2030 <_IO_stdin_used+0x30>
    1223:	b8 00 00 00 00       	mov    $0x0,%eax
    1228:	e8 13 fe ff ff       	callq  1040 <printf@plt>
    122d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    1231:	48 89 c6             	mov    %rax,%rsi
    1234:	48 8d 3d 17 0e 00 00 	lea    0xe17(%rip),%rdi        # 2052 <_IO_stdin_used+0x52>
    123b:	b8 00 00 00 00       	mov    $0x0,%eax
    1240:	e8 2b fe ff ff       	callq  1070 <__isoc99_scanf@plt>
    1245:	8b 55 f0             	mov    -0x10(%rbp),%edx
    1248:	8b 45 ec             	mov    -0x14(%rbp),%eax
    124b:	89 d6                	mov    %edx,%esi
    124d:	89 c7                	mov    %eax,%edi
    124f:	e8 35 ff ff ff       	callq  1189 <getrand>
    1254:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1257:	8b 45 e8             	mov    -0x18(%rbp),%eax
    125a:	8b 55 f4             	mov    -0xc(%rbp),%edx
    125d:	89 d6                	mov    %edx,%esi
    125f:	89 c7                	mov    %eax,%edi
    1261:	e8 5a ff ff ff       	callq  11c0 <cmpnum>
    1266:	85 c0                	test   %eax,%eax
    1268:	75 18                	jne    1282 <main+0xaa>
    126a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    126d:	89 c6                	mov    %eax,%esi
    126f:	48 8d 3d e2 0d 00 00 	lea    0xde2(%rip),%rdi        # 2058 <_IO_stdin_used+0x58>
    1276:	b8 00 00 00 00       	mov    $0x0,%eax
    127b:	e8 c0 fd ff ff       	callq  1040 <printf@plt>
    1280:	eb 11                	jmp    1293 <main+0xbb>
    1282:	48 8d 3d ef 0d 00 00 	lea    0xdef(%rip),%rdi        # 2078 <_IO_stdin_used+0x78>
    1289:	b8 00 00 00 00       	mov    $0x0,%eax
    128e:	e8 ad fd ff ff       	callq  1040 <printf@plt>
    1293:	b8 00 00 00 00       	mov    $0x0,%eax
    1298:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    129c:	64 48 2b 0c 25 28 00 	sub    %fs:0x28,%rcx
    12a3:	00 00 
    12a5:	74 05                	je     12ac <main+0xd4>
    12a7:	e8 84 fd ff ff       	callq  1030 <__stack_chk_fail@plt>
    12ac:	c9                   	leaveq 
    12ad:	c3                   	retq   
    12ae:	66 90                	xchg   %ax,%ax

00000000000012b0 <__libc_csu_init>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	41 57                	push   %r15
    12b6:	4c 8d 3d 2b 2b 00 00 	lea    0x2b2b(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    12bd:	41 56                	push   %r14
    12bf:	49 89 d6             	mov    %rdx,%r14
    12c2:	41 55                	push   %r13
    12c4:	49 89 f5             	mov    %rsi,%r13
    12c7:	41 54                	push   %r12
    12c9:	41 89 fc             	mov    %edi,%r12d
    12cc:	55                   	push   %rbp
    12cd:	48 8d 2d 1c 2b 00 00 	lea    0x2b1c(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    12d4:	53                   	push   %rbx
    12d5:	4c 29 fd             	sub    %r15,%rbp
    12d8:	48 83 ec 08          	sub    $0x8,%rsp
    12dc:	e8 1f fd ff ff       	callq  1000 <_init>
    12e1:	48 c1 fd 03          	sar    $0x3,%rbp
    12e5:	74 1f                	je     1306 <__libc_csu_init+0x56>
    12e7:	31 db                	xor    %ebx,%ebx
    12e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12f0:	4c 89 f2             	mov    %r14,%rdx
    12f3:	4c 89 ee             	mov    %r13,%rsi
    12f6:	44 89 e7             	mov    %r12d,%edi
    12f9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    12fd:	48 83 c3 01          	add    $0x1,%rbx
    1301:	48 39 dd             	cmp    %rbx,%rbp
    1304:	75 ea                	jne    12f0 <__libc_csu_init+0x40>
    1306:	48 83 c4 08          	add    $0x8,%rsp
    130a:	5b                   	pop    %rbx
    130b:	5d                   	pop    %rbp
    130c:	41 5c                	pop    %r12
    130e:	41 5d                	pop    %r13
    1310:	41 5e                	pop    %r14
    1312:	41 5f                	pop    %r15
    1314:	c3                   	retq   
    1315:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    131c:	00 00 00 00 

0000000000001320 <__libc_csu_fini>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	c3                   	retq   

Disassembly of section .fini:

0000000000001328 <_fini>:
    1328:	f3 0f 1e fa          	endbr64 
    132c:	48 83 ec 08          	sub    $0x8,%rsp
    1330:	48 83 c4 08          	add    $0x8,%rsp
    1334:	c3                   	retq   
